{"version":3,"sources":["components/ColorBlock/ColorBlock.js","components/App/App.js","index.js"],"names":["ColorBlock","hue","item","index","children","key","id","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","style","saturation","value","draggableStyle","backgroundColor","height","width","display","userSelect","padding","margin","App","getArray","arr","j","x","i","a","length","Math","floor","random","shuffleArray","map","useState","correct","setCorrect","setHue","saturationArray","setSaturationArray","className","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","direction","alignItems","overflow","borderColor","droppableProps","placeholder","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAIe,SAASA,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAerD,OACE,kBAAC,IAAD,CAAWC,IAAKH,EAAKI,GAAIC,YAAaL,EAAKI,GAAIH,MAAOA,IACnD,SAACK,GAAD,OACC,uCACEC,IAAKD,EAASE,UACVF,EAASG,eACTH,EAASI,gBAHf,CAIEC,OApBeC,EAqBbZ,EAAKa,MArBoBC,EAsBzBR,EAASG,eAAeE,MArBzB,aACLI,gBAAgB,OAAD,OAAShB,EAAT,aAAiBa,EAAjB,WACfI,OAAQ,OACRC,MAAO,OACPC,QAAS,OACTC,WAAY,OACZC,QAAS,GACTC,OAAQ,cACLP,MAgBGZ,GAzBV,IAAuBU,EAAYE,KCAtB,SAASQ,IAatB,SAASC,IAOP,OAlBF,SAAsBC,GACpB,IACIC,EAAGC,EAAGC,EADNC,EAAC,YAAOJ,GAEZ,IAAKG,EAAIC,EAAEC,OAAS,EAAGF,EAAI,EAAGA,IAC1BF,EAAIK,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCD,EAAIE,EAAED,GACNC,EAAED,GAAKC,EAAEH,GACTG,EAAEH,GAAKC,EAEX,OAAOE,EASAK,CANO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrBC,KAAI,SAAClC,EAAMC,GAAP,MAAkB,CACtCG,GAAG,QAAD,OAAUH,GACZY,MAAM,GAAD,OAAKb,QAjBc,MAuBEmC,mBAAS,MAvBX,mBAuBrBC,EAvBqB,KAuBZC,EAvBY,OAwBNF,mBAASL,KAAKC,MAAsB,IAAhBD,KAAKE,WAxBnB,mBAwBrBjC,EAxBqB,KAwBhBuC,EAxBgB,OAyBkBH,mBAASZ,KAzB3B,mBAyBrBgB,EAzBqB,KAyBJC,EAzBI,KAiF5B,OACE,yBAAKC,UAAU,aACb,2CAGA,yBAAKA,UAAU,gBAAf,6DAGA,kBAAC,IAAD,CAAiBC,UAxBrB,SAAmBC,GAEjB,GAAKA,EAAOC,YAAZ,CAIA,IAAMC,EAdR,SAAiBC,EAAMC,EAAYC,GACjC,IAAML,EAASM,MAAMC,KAAKJ,GADiB,EAEzBH,EAAOQ,OAAOJ,EAAY,GAArCK,EAFoC,oBAK3C,OAFAT,EAAOQ,OAAOH,EAAU,EAAGI,GAEpBT,EASOU,CACZd,EACAI,EAAOW,OAAOrD,MACd0C,EAAOC,YAAY3C,OAGrBuC,EAAmBK,MAaf,kBAAC,IAAD,CAAWU,YAAY,YAAYC,UAAU,eAC1C,SAAClD,GAAD,OACC,uCACEC,IAAKD,EAASE,SACdG,MAlEH,CACLO,QAAS,OACTuC,WAAY,SACZrC,QAAS,GACTsC,SAAU,UACVC,YAAa,UA8DDrD,EAASsD,gBAEZrB,EAAgBL,KAAI,SAAClC,EAAMC,GAAP,OACnB,kBAACH,EAAD,CACEE,KAAMA,EACNC,MAAOA,EACPF,IAAKA,GAEO,MAAXqC,EAA2BpC,EAAKa,MAvDjC,GAAM,EAuDoC,SAG7CP,EAASuD,iBAKlB,yBACEC,QA3EN,WACE,IAAK,IAAInC,EAAI,EAAGA,EAAIY,EAAgBV,OAAS,EAAGF,IAC9C,GAAIY,EAAgBZ,GAAKY,EAAgBZ,EAAE,GAEzC,YADAU,GAAW,GAIfA,GAAW,IAqEPI,UAAU,UAFZ,QAMA,yBACEqB,QAnEN,WACEzB,EAAW,MACXC,EAAOR,KAAKC,MAAsB,IAAhBD,KAAKE,WACvBQ,EAAmBjB,MAiEfkB,UAAU,UAFZ,aCtHNsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f48aebff.chunk.js","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\n\nexport default function ColorBlock({ hue, item, index, children }) {\n\n  function getBlockStyle(saturation, draggableStyle) {\n    return {\n      backgroundColor: `hsl(${hue}, ${saturation}%, 50%)`,\n      height: '50px',\n      width: '50px',\n      display: 'flex',\n      userSelect: 'none',\n      padding: 16,\n      margin: '0 16px 0 0',\n      ...draggableStyle,\n    }\n  }\n  \n  return (\n    <Draggable key={item.id} draggableId={item.id} index={index}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getBlockStyle(\n            item.value,\n            provided.draggableProps.style\n            )}\n        >\n          { children }\n        </div>\n      )}\n    </Draggable>\n  )\n}","import React, { useState } from 'react';\nimport './App.css';\nimport ColorBlock from '../ColorBlock';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\n\nexport default function App() {\n\n  function shuffleArray(arr) {\n    let a = [...arr];\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n  function getArray() {\n    const array = [40, 50, 60, 70, 80, 90, 100]\n    const arr = array.map((item, index) => ({\n      id: `item-${index}`,\n      value: `${item}`,\n    }));\n\n    return shuffleArray(arr);\n  }\n\n  const [correct, setCorrect] = useState(null);\n  const [hue, setHue] = useState(Math.floor(Math.random() * 360));\n  const [saturationArray, setSaturationArray] = useState(getArray());\n\n  function getListStyle() {\n    return {\n      display: 'flex',\n      alignItems: 'center',\n      padding: 16,\n      overflow: 'visible',\n      borderColor: 'azure',\n    };\n  }\n\n  function handleCheckCorrect() {\n    for (let i = 0; i < saturationArray.length - 1; i++) {\n      if (saturationArray[i] > saturationArray[i+1]) {\n        setCorrect(false);\n        return;\n      }\n    }\n    setCorrect(true);\n  }\n\n  function getValue(val) {\n    return (val / 10) - 4;\n  }\n\n  function newGame() {\n    setCorrect(null);\n    setHue(Math.floor(Math.random() * 360));\n    setSaturationArray(getArray());\n  }\n  \n  function reorder(list, startIndex, endIndex) {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  }\n\n  function onDragEnd(result) {\n\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      saturationArray,\n      result.source.index,\n      result.destination.index\n    );\n\n    setSaturationArray(items);\n  }\n\n\n  return (\n    <div className=\"container\">\n      <h1>\n        Colorblocks\n      </h1>\n      <div className=\"instructions\">\n        Order the colors by value from darkest to lightest shade.\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n          {(provided) => (\n            <div \n              ref={provided.innerRef}\n              style={getListStyle()}\n              {...provided.droppableProps}\n            >\n              {saturationArray.map((item, index) => (\n                <ColorBlock\n                  item={item}\n                  index={index}\n                  hue={hue}\n                >\n                  {correct != null ? getValue(item.value) : null}\n                </ColorBlock>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <div\n        onClick={handleCheckCorrect}\n        className=\"button\"\n      >\n        Show\n      </div>\n      <div\n        onClick={newGame}\n        className=\"button\"\n      >\n        New Game\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}